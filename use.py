import numpy as np
y1 = np.array([1,1])
y2 = np.array([-1,2])
v1 = y1
v2 = y2 - (np.dot(v1,y2) / np.dot(v1,v1)) * v1
# print(v2)
# print(np.dot(v1,v2))
# 維度跟數量是搭配的
y1 = [1,1]
y2 = [-1,2]
y3 = [2,3]
y4 = [-2,-3]
y5 = [3,-1]
v1 = y1
v2 = [
    y2[0] - (v1[0]*y2[0]+v1[1]*y2[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[0] ,
    y2[1] - (v1[0]*y2[0]+v1[1]*y2[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[1] ]
v3 = [
    y3[0] - ((v1[0]*y3[0]+v1[1]*y3[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[0] 
    + (v2[0]*y3[0]+v2[1]*y3[1]) / (v2[0]*v2[0]+v2[1]*v2[1]) * v2[0]) ,
    y3[1] - ((v1[0]*y3[0]+v1[1]*y3[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[1]
    + (v2[0]*y3[0]+v2[1]*y3[1]) / (v2[0]*v2[0]+v2[1]*v2[1]) * v2[1]) ]
v4 = [
    y4[0] - ((v1[0]*y4[0]+v1[1]*y4[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[0] 
    + (v2[0]*y4[0]+v2[1]*y4[1]) / (v2[0]*v2[0]+v2[1]*v2[1]) * v2[0]) ,
    y4[1] - ((v1[0]*y4[0]+v1[1]*y4[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[1]
    + (v2[0]*y4[0]+v2[1]*y4[1]) / (v2[0]*v2[0]+v2[1]*v2[1]) * v2[1])]
v5 = [
    y5[0] - ((v1[0]*y5[0]+v1[1]*y5[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[0] 
    + (v2[0]*y5[0]+v2[1]*y5[1]) / (v2[0]*v2[0]+v2[1]*v2[1]) * v2[0]) ,
    y5[1] - ((v1[0]*y5[0]+v1[1]*y5[1]) / (v1[0]*v1[0]+v1[1]*v1[1]) * v1[1]
    + (v2[0]*y5[0]+v2[1]*y5[1]) / (v2[0]*v2[0]+v2[1]*v2[1]) * v2[1])]
print(v1,v2,v3,v4,v5)
# print(v2)
# print(v1[0]*v2[0] + v1[1]*v2[1])

# q = 2
# i = 1
# for i in range(q):
#     i = i + 1
#     # print(i)

# for i in range(q):
#     i = i + 1
#     # r = (np.dot(vi,yk) / np.dot(vi,vi)) * vi
# x1 = 30
# # print("x"+str(1))


# y1 = np.array([1,1])
# y2 = np.array([-1,2])
# v1 = y1
# v2 = y2 - (np.dot(v1,y2) / np.dot(v1,v1)) * v1

# # def g(x):
# #     return x + 1 + 1/x
# # def f(x):
# #     return 0.5*(g(x)-g((x-1)/x)+g(1/(1-x)))
# # sum = 0
# # for i in range(2,101):
# #     sum += f(i)
# # print(sum)
# q = 3

# def g(x):
#      return "v" + str(x)
# print(g(2))